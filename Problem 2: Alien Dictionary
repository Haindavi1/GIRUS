#include <stdio.h>
#include <string.h>

#define MAX_WORDS 100
#define MAX_LEN 100
#define ALPHABET 26

int connections[ALPHABET][ALPHABET];
int countBefore[ALPHABET];
int seen[ALPHABET];
char finalOrder[ALPHABET];
int start = 0, end = 0;

void addRelation(char first, char second) {
    int x = first - 'a';
    int y = second - 'a';
    if (connections[x][y] == 0) {
        connections[x][y] = 1;
        countBefore[y]++;
    }
}

void getOrder() {
    int q[ALPHABET];
    for (int i = 0; i < ALPHABET; i++) {
        if (seen[i] && countBefore[i] == 0) {
            q[end++] = i;
        }
    }

    int pos = 0;
    while (start < end) {
        int curr = q[start++];
        finalOrder[pos++] = curr + 'a';

        for (int i = 0; i < ALPHABET; i++) {
            if (connections[curr][i]) {
                countBefore[i]--;
                if (countBefore[i] == 0) {
                    q[end++] = i;
                }
            }
        }
    }

    int totalLetters = 0;
    for (int i = 0; i < ALPHABET; i++) {
        if (seen[i]) totalLetters++;
    }

    if (pos < totalLetters) {
        printf("No valid character order (cycle found).\n");
    } else {
        finalOrder[pos] = '\0';
        printf("Character order: %s\n", finalOrder);
    }
}

int main() {
    int n;
    char words[MAX_WORDS][MAX_LEN];

    printf("How many words? ");
    scanf("%d", &n);

    printf("Enter the words:\n");
    for (int i = 0; i < n; i++) {
        scanf("%s", words[i]);
        for (int j = 0; words[i][j]; j++) {
            seen[words[i][j] - 'a'] = 1;
        }
    }

    for (int i = 0; i < n - 1; i++) {
        char *w1 = words[i];
        char *w2 = words[i + 1];
        int len = strlen(w1) < strlen(w2) ? strlen(w1) : strlen(w2);

        for (int j = 0; j < len; j++) {
            if (w1[j] != w2[j]) {
                addRelation(w1[j], w2[j]);
                break;
            }
        }
    }

    getOrder();

    return 0;
}
